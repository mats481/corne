/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

#define DVO     1
#define NAV     2
#define NUM     3   
#define SYM     4
#define LOL     5


/ {
        keymap {
                compatible = "zmk,keymap";

                default_layer {
// -----------------------------------------------------------------------------------------
// | ESC |  .  |  ,  |  Ñ  |  P  |  Y  |   |  F  |  G   |  C  |  H  |  L  | BKSP |
// | TAB |  A  |  O  |  E  |  U  |  I  |   |  D  |  R   |  T  |  N  |  S  | SUP  |
// | GUI |  '  |  Q  |  J  |  K  |  X  |   |  B  |  M   |  W  |  V  |  Z  | ´ ALT  |
//                    | NUM | SPACE/NAV | CTRL |   | ENT | SYM  | SHIFT/LOCK |
                        bindings = <
   &kp ESC   &kp DOT &kp COMMA &kp SEMI &kp P &kp Y     &kp F &kp G  &kp C  &kp H   &kp L    &kp BSPC
   &kp TAB   &kp A   &kp O     &kp E    &kp U &kp I     &kp D &kp R  &kp T  &kp N   &kp S    &kp DEL
   &kp LGUI  &kp SQT &kp Q     &kp J    &kp K &kp X     &kp B &kp M  &kp W  &kp V   &kp Z    &mt LPAR LALT
                  &mo NUM &lt NAV SPACE &kp LCTRL              &kp RET &mo SYM &kp LSHIFT
                        >;
                };
                nav_layer {
// -----------------------------------------------------------------------------------------
// | F1  |  F2 |  F3    |  F4   |  F5     |  F6  |   |  COPY  |  CUT     |  UP    |  PASTE  |  IMPPAGE  | BKSP |
// | TAB |     |  CTRL  |  ALT  |  SHIFT  |      |   |  CTRL  |  LEFT    |  DOWN  |  RIGHT  |           | SUP  |
// | F7  |  F8 |  F9    |  F10  |  F11    |  F12 |   |  PAUS  |  ANTER   |  PROX  |   MUTE  |  -SON     | +SON  |
//                      | GUI   |     | SPACE/CTRL |   | ENT |           |  LOL   |
                        bindings = <
   &kp F1   &kp F2     &kp F3    &kp F4   &kp F5     &kp F6           &kp LC(C) &kp LC(X)  &kp UP       &kp LC(V)   &kp PSCRN    &kp BSPC
   &kp TAB  &trans  &kp LCTRL &kp LALT &kp LSHIFT &trans        &kp LCTRL &kp LEFT   &kp DOWN     &kp RIGHT   &trans    &kp DEL
   &kp F7   &kp F8     &kp F9    &kp F10  &kp F11    &kp F12          &kp C_PP  &kp C_PREV &kp C_NEXT   &kp C_MUTE  &kp C_VOL_DN &kp C_VOL_UP
                  &kp LGUI &trans &mt SPACE LCTRL                  &kp RET &trans &tog LOL
                        >;
                };
                num_layer {
// -----------------------------------------------------------------------------------------
// |  +BRI |  =  |  %  |  (   |   )  |  :  |     |  =  |  7  |  8  |  9  |  *  |  BKSP |
// |  -BRI |     |     |  {   |   }  |  ;  |     |  /  |  4  |  5  |  6  |  +  |  SUP  |
// |       |  $  |     |  [   |   ]  |  #  |     |  ,  |  1  |  2  |  3  |  -  | SHIFT |
//                      |    |     | SPACE/CTRL |   | ENT |   .  |  0   |
                        bindings = <
   &kp C_BRI_UP   &kp EQUAL  &kp PRCNT &kp LPAR  &kp RPAR  &kp COLON        &kp EQUAL &kp N7  &kp N8  &kp N9  &kp ASTRK  &kp BSPC
   &kp C_BRI_DN   &trans  &trans &kp LBRC  &kp RBRC  &kp SEMI         &kp FSLH  &kp N4  &kp N5  &kp N6  &kp PLUS   &kp DEL
   &bt BT_CLR &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4        &kp COMMA &kp N1  &kp N2  &kp N3  &kp MINUS  &kp LSHIFT
                  &trans  &trans &mt SPACE LCTRL                         &kp RET &trans &kp N0
                        >;
                };
                sym_layer {
// -----------------------------------------------------------------------------------------
// |  |  |  =  |  %  |  (   |   )  |  ^  |     |  /  |  ¿  |  ?  |  <  |  *  |  BKSP |
// |     |  @  |  "  |  {   |   }  |  ;  |     |  \  |  ¡  |  !  |  >  |  +  |  SUP  |
// |     |  $  |  &  |  [   |   ]  |  #  |     |  °  |  ~  |  ¬  |  _  |  -  | SHIFT |
//                      |  ;  |   :  | SPACE/CTRL |   | ENT |     |  ALT   |
                        bindings = <
   &kp PIPE2   &kp EQUAL  &kp PRCNT &kp LPAR  &kp RPAR  &kp CARET        &kp FSLH  &kp EQUAL  &kp QMARK   &kp LT  &kp ASTRK  &kp BSPC
   &kp C_BRI_DN   &trans  &trans &kp LBRC  &kp RBRC  &kp SEMI      &kp BSLH  &kp PLUS   &kp EXCL    &kp GT  &kp PLUS   &kp DEL
   &trans      &kp DLLR   &trans &kp LBKT  &kp RBRC  &trans     &kp TILDE &kp TILDE  &kp TILDE2  &kp UNDER  &kp MINUS  &kp LSHIFT
                  &kp SEMI  &kp COLON &mt SPACE LCTRL                         &kp RET &trans &kp LALT
                        >;
                };
                lol_layer {
// -----------------------------------------------------------------------------------------
// |  ESC  |  1  | 2   |  3   |   4  |  5  |     |  F2 |  F3 |  F4 |  F5 |     |  BKSP |
// |  TAB  |  Q  |  W  |  E   |   R  |  6  |     |  C  |  V  |  O  |  Y  |  S  |  SUP  |
// |   G   |  P  |  B  |  D   |   F  |  M  |     |  L  |  H  |  Z  |  X  |     | SHIFT |
//                      |  T  |   ENT  | SPACE |   | CTRL |  DVORAK   |  SHIFT   |
                        bindings = <
   &kp ESC   &kp N1  &kp N2  &kp N3  &kp N4  &kp N5        &kp F2  &kp F3  &kp F4   &kp F5  &trans  &kp BSPC
   &kp TAB   &kp Q   &kp W   &kp E   &kp R   &kp N6        &kp C     &kp V   &kp O    &kp Y  &kp S   &kp DEL
   &kp G     &kp P   &kp B   &kp D   &kp F   &kp M         &kp L &kp H  &kp Z  &kp X  &trans  &kp LSHIFT
                  &kp SEMI  &kp COLON &mt SPACE LCTRL                         &kp LCTRL &tog DVO &kp LSHIFT
                        >;
                };
        };
};
